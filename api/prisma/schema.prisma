// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // ou mysql/sqlite — ajuste conforme seu DB
  url      = env("DATABASE_URL")
}

model Store {
  id        String   @id @default(cuid())
  name      String
  cnpj      String?  @unique
  city      String?
  uf        String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  receipts  Receipt[]
}

model Receipt {
  id         String        @id @default(cuid())
  accessKey  String        @unique
  issuedAt   DateTime
  uf         String
  total      Decimal?
  storeId    String
  store      Store         @relation(fields: [storeId], references: [id])
  createdBy  String?       // uid do Firebase (opcional)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  items      ReceiptItem[]
}

model ReceiptItem {
  id         String   @id @default(cuid())
  receiptId  String
  receipt    Receipt  @relation(fields: [receiptId], references: [id])

  rawDesc    String
  quantity   Decimal   // para peso, mandamos 1
  unit       String?   // un | kg | g | l | ml | bd | dz
  unitPrice  Decimal   // preço unitário (ou preço por kg/l/g/ml quando é peso)
  total      Decimal   // total da linha

  // ligação com produto (pode ficar null quando ainda não mapeamos)
  productId  String?
  product    Product? @relation(fields: [productId], references: [id])

  createdAt  DateTime @default(now())
}

model Product {
  id          String          @id @default(cuid())
  slug        String          @unique      // ex: "leite-integral-pirarucu-1l"
  displayName String
  brand       String?
  category    String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  images      ProductImage[]
  items       ReceiptItem[]
}

model ProductImage {
  id         String   @id @default(cuid())
  productId  String
  product    Product  @relation(fields: [productId], references: [id])

  url        String
  width      Int?
  height     Int?
  source     String? // "openfoodfacts" | "mercadolivre" | "manual"

  createdAt  DateTime @default(now())
}
